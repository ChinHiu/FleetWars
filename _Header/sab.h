//------------------------------------------------------------------------------
//	タイトル：		サブクラス、構造体、列挙型などのヘッダー
//	ファイル名：	sab.h
//	作成者：		AT13B284 28 CHIN HIU
//	作成日：		2017/01/07
//------------------------------------------------------------------------------
#ifndef _SAB_H_
#define _SAB_H_

//------------------------------------------------------------------------------
//	インクルードファイル
//------------------------------------------------------------------------------
#include "renderer.h"

//------------------------------------------------------------------------------
//	列挙型定義
//------------------------------------------------------------------------------
//  UIタイプ
typedef enum
{
	UI_NONE = -1,

	//  タイトルUI
	UI_TITLE,
	UI_START,
	UI_EXIT,

	//  チュートリアルUI,
	UI_TUTORIAL_FRAME,
	UI_TUTORIAL_CONTROLLER,
	UI_TUTORIAL_SKIP,
	UI_TUTORIAL_DESCRIPTION0,
	UI_TUTORIAL_DESCRIPTION1,
	UI_TUTORIAL_DESCRIPTION2,
	UI_TUTORIAL_DESCRIPTION3,
	UI_TUTORIAL_DESCRIPTION4,
	UI_TUTORIAL_DESCRIPTION5,
	UI_TUTORIAL_DESCRIPTION6,
	UI_TUTORIAL_DESCRIPTION7,
	UI_TUTORIAL_DESCRIPTION8,
	UI_TUTORIAL_DESCRIPTION9,

	//  武器UI
	UI_WEAPON_GATLING,
	UI_WEAPON_MISSILE,
	//UI_WEAPON_JAMMING,
	UI_WEAPON_REPAIR,

	//  武器数字関係UI
	UI_INFINITY_BG,
	UI_INFINITY_OH,
	UI_OVERHEAT,
	UI_POWER_MARK,
	UI_SPEED_MARK,
	UI_HP_FRAME,
	UI_HP,

	//  ゲーム結果
	UI_MISSION_COM,
	UI_MISSION_FAIL,
	UI_MISSION_START,

	//  リザルトUI
	UI_RESULT_FRAME,
	UI_RESULT_RANK,
	UI_RESULT_THANKS,
	UI_RESULT_FAIL,
	UI_TYPE_MAX
}UI_TYPE;

//------------------------------------------------------------------------------
//	構造体定義
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	クラス宣言
//------------------------------------------------------------------------------
//  2Dテクスチャデータ
class CTex2D_Data
{
public:
	D3DXVECTOR2 Pos;
	D3DXVECTOR2 Rot;
	D3DXVECTOR2 Size;
	D3DXCOLOR	Col;
	//UI_TYPE		Type;
	bool		Flag;

	CTex2D_Data()
		: Pos(D3DXVECTOR2(0.0f, 0.0f))
		, Rot(D3DXVECTOR2(0.0f, 0.0f))
		, Size(D3DXVECTOR2(0.0f, 0.0f))
		//, Type(UI_NONE)
		, Col(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f))
		, Flag(false)
	{}
};

//  マトリックスクラス
class CMatrix
{
public:
	D3DXMATRIX	World;			//  ワールドマトリックス
	D3DXMATRIX	Scl;			//  スケールマトリックス
	D3DXMATRIX	Rot;			//  回転マトリックス
	D3DXMATRIX	Trans;			//  位置マトリックス

	CMatrix()
	{
		D3DXMatrixIdentity(&World);
		D3DXMatrixIdentity(&Scl);
		D3DXMatrixIdentity(&Rot);
		D3DXMatrixIdentity(&Trans);
	}
};

//------------------------------------------------------------------------------
//	前方宣言
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	コンスト定義
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	マクロ定義
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	列挙型定義
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	構造体定義
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	クラス宣言
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//	プロトタイプ宣言
//------------------------------------------------------------------------------
#endif // 
